
@{
    ViewBag.Title = "JavaScriptLabs";
    ;
}
@Styles.Render("~/Content/app/index.css")
@Styles.Render("~/Content/SyntaxHighlighter/shCoreDefault.css")
<br />
<h2>JavaScript Labs</h2>

<div class="list-group">
    <div class="row">
        <a href="#arayLabs" data-toggle="collapse" class="list-group-item"><h4>Arrays</h4></a>
        <div id="arayLabs" class="collapse">
            <div class="col-md-1">
                <h5><b>Sum</b></h5>
            </div>
            <div class="col-md-10">
                <div class="col-md-6">
                    <br />
                    <p>Given an array of ints, return the sum of all the elements. </p>
                    <select id="sumArrayDropdown" class="btn btn-default">
                        <option value="1, 2, 3">1, 2, 3</option>
                        <option value="5,11,2">5,11,2</option>
                        <option value="7,0,0">7,0,0</option>
                    </select>

                    <button id="sumArray" class="btn btn-primary btn-sm">Submit</button>
                    <p><em id="sumArrayResult"></em></p>
                </div>
                <div class="col-md-6">
                    <br />
                <pre class="brush js">
function Sum(numbers) {
    count = 0;
    sum = 0;
    while (count < numbers.length) {
        sum += parseInt(numbers[count]);
        count++;
    }            
    return sum; 
}</pre>
                </div>

            </div>
        </div>
    </div>

    <div class="row">
        <a href="#conditionals" data-toggle="collapse" class="list-group-item"><h4>Conditionals</h4></a>
        <div id="conditionals" class="collapse">

            @* START *@
            <div class="col-md-1">
                <h5><b>GotE</b></h5>
            </div>
            <div class="col-md-10">
                <div class="col-md-6">
                    <br />
                    <p>Return true if the given string contains between 1 and 3 'e' chars.</p>
                    <select id="GotEDropdown" class="btn btn-default">
                        <option value="Hello">Hello</option>
                        <option value="Heelle">Heelle</option>
                        <option value="Heelele">Heelele</option>
                    </select>

                    <button id="GotE" class="btn btn-primary btn-sm">Submit</button>
                    <p><em id="GotEresult"></em></p>
                </div>
                
                <div class="col-md-6">
                    <br />
                    <pre class="brush js">
function GotE(str) {
    var foundE = str.match(/e/g);
    if (foundE != null) {
        var n = foundE.length;
        if (n < 4 && n > 0) {
          return true;
        }
    } 
    return false;
}</pre>
                </div>
            </div>
            @* END *@


        </div>

        </div>


    <div class="row">
        <a href="#strings" data-toggle="collapse" class="list-group-item"><h4>Strings</h4></a>
        <div id="strings" class="collapse">
            <div class="col-md-1">
                <h5><b>StripX</b></h5>
            </div>
            <div class="col-md-10">
                <div class="col-md-6">
                    <br />
                    <p>Given a string, if the first or last chars are 'x', return the string without those 'x' chars, and otherwise return the string unchanged.</p>
                    <select id="stripXDropdown" class="btn btn-default">
                        <option value="xHix">xHix</option>
                        <option value="xHi">xHi</option>
                        <option value="Hxix">Hxix</option>
                    </select>

                    <button id="stripX" class="btn btn-primary btn-sm">Submit</button>
                    <p><em id="stripXresult"></em></p>

                </div>
               
                <div class="col-md-6">
                <br />
                <pre class="brush js">
function StripX(str) {
    var indexOfX = str.indexOf("x");
    var lastLetter = str.slice(-1)
    if (indexOfX == 0 && lastLetter == "x") {
        return str.slice(1, str.length - 1);
    } else if (indexOfX != 0 && lastLetter == "x") {
        return str.slice(0, str.length - 1);
    } else {
        return str.slice(1, str.length);
    }
}</pre>
            </div>
                </div>
            </div>
        </div>

    <div class="row">
        <a href="#logic" data-toggle="collapse" class="list-group-item"><h4>Logic</h4></a>
        <div id="logic" class="collapse">

            <div class="col-md-1">
                <h5><b>Mod35</b></h5>
            </div>
            <div class="col-md-10">
                <div class="col-md-6">
                    <br />
                    <p>Return true if the given non-negative number is a multiple of 3 or 5, but not both </p>
                    <select id="mod35Dropdown" class="btn btn-default">
                        <option value="3">3</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                        <option value="89">89</option>

                    </select>

                    <button id="mod35" class="btn btn-primary btn-sm">Submit</button>
                    <p><em id="mod35result"></em></p>
                </div>
                <div class="col-md-6">
                    <br />
                    <pre class="brush js">
function Mod35(n) {
    if (n % 3 == 0) {
        if (n % 5 == 0) {
            return false;
        }
        return true;
    } else if (n % 5 == 0) {
        return true;
    }
    return false;
}</pre>
                </div>
            </div>
           
        </div>
    </div>



    <div class="row">
        <a href="#loops" data-toggle="collapse" class="list-group-item"><h4>Loops</h4></a>
        <div id="loops" class="collapse">
            <div class="col-md-1">
                <h5><b>AltPairs</b></h5>
            </div>
            <div class="col-md-10">
                <div class="col-md-6">
                    <br />
                    <p>
                        Given a string, return a string made of the chars at indexes 0,1, 4,5, 8,9 ... so "kittens" yields "kien".
                    </p>
                    <select id="altPairsDropdown" class="btn btn-default">
                        <option value="kitten">kitten</option>
                        <option value="Chocolate">Chocolate</option>
                        <option value="CodingHorror">CodingHorror</option>
                    </select>

                    <button id="altPairs" class="btn btn-primary btn-sm">Submit</button>
                    <p><em id="altPairsResult"></em></p>
                </div>
                <div class="col-md-6">
                    <br />
                    <pre class="brush js">
function AltPairs(str) {
    var newStr ="";
    for (var i = 0; i < str.length; i += 4) {
        newStr += str.substring(i, Math.min(str.length, i + 2));          
    }
    return newStr;
} </pre>
                </div>
            </div>
        </div>
    </div>

</div>

   
<h4><strong>View All JavaScript Labs </strong><a href="https://github.com/KileyDowling/LabExercises/tree/master/JavaScript%20Labs" target="_blank"><span class="glyphicon glyphicon-circle-arrow-right" aria-hidden="true"></span></a></h4>

@Html.ActionLink("Home", "Index", "Home")
@section scripts {
    <script src="~/Scripts/app/JSLabs.js">
       
    </script>
    <script src="~/Scripts/SyntaxHighlighter/shBrushJScript.js"></script>
 }